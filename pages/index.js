import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import Banner from '../Components/Banner'
import Card from '../Components/Card'
import Image from 'next/image'

import { fetchCoffeeStores } from '@/lib/coffee-stores'
import useTrackLocation from '@/hooks/use-track-location'
import { useContext, useEffect, useState } from 'react'
import { ACTION_TYPES, StoreContext } from '@/store/store-context'

export async function getStaticProps(context) {
  
  const coffeeStores = await fetchCoffeeStores();

  return {
    props: {
      coffeeStores,
    },
  };
}

export default function Home({coffeeStores}) {
  const { handleTrackLocation, locationErrorMsg, isFindingLocation } = useTrackLocation();
  const handleBannerBtnClick = () => {
    handleTrackLocation();
  }

  const [coffeeStoresError, setCoffeeStoresError] = useState(null);

  const {dispatch, state} = useContext(StoreContext);

  const {locatedCoffeeStores, latLong} = state;

  useEffect(() => {
    async function setCoffeeStoresByLocation() {
      if(latLong) {
        try {
          const response = await fetch(`api/getCoffeeStoresByLocation?latLong=${latLong}&limit=${6}`);
          const locatedCoffeeStores = await response.json();
          dispatch({
            type: ACTION_TYPES.SET_COFFEE_STORES,
            payload: {
              locatedCoffeeStores,
            },
          })
          setCoffeeStoresError("");
        } catch(error) {
          setCoffeeStoresError(error.message);
        }
      }
    }
    setCoffeeStoresByLocation();
  },[latLong])

  return (
    <div className={styles.container}>
      <Head>
        <title>Coffee Connoisseur</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Banner 
          buttonText={isFindingLocation ? "Locating..." : "View stores nearby"} 
          handleClick={handleBannerBtnClick}
        />
        {locationErrorMsg && (<p>Something went wrong:{locationErrorMsg}</p>)}
        {coffeeStoresError && (<p>Something went wrong:{coffeeStoresError}</p>)}
        <div className={styles.heroImage}>
          <Image 
            src="/static/hero-image.png"
            alt="overlay image" 
            priority={true}
            width={700} 
            height={400}
          />  
        </div>
        {locatedCoffeeStores.length > 0 && (
          <div className={styles.sectionWrapper}>
            <h2 className={styles.heading2}>Stores near me</h2>
            <div className={styles.cardLayout}>
              {locatedCoffeeStores.map((coffeeStore) => {
                return (
                  <Card 
                    key={coffeeStore.id}
                    name={coffeeStore.name} 
                    imgUrl={coffeeStore.imgUrl} 
                    href={`/coffee-store/${coffeeStore.id}`}
                    className={styles.card}
                  />
                );
              })}
             </div>
          </div>
        )}
        {coffeeStores.length > 0 && (
          <div className={styles.sectionWrapper}>
            <h2 className={styles.heading2}>London stores</h2>
            <div className={styles.cardLayout}>
              {coffeeStores.map((coffeeStore) => {
                return (
                  <Card 
                    key={coffeeStore.id}
                    name={coffeeStore.name} 
                    imgUrl={coffeeStore.imgUrl} 
                    href={`/coffee-store/${coffeeStore.id}`}
                    className={styles.card}
                  />
                );
              })}
             </div>
          </div>
        )}
      </main>
    </div>
  )
}
